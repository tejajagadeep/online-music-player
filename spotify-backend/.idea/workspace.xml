<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a2504401-f241-4a58-ab09-902bb2951c1e" name="Changes" comment="Commit message [date: %Y-%m-%d] [time: %H:%M:%S]">
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_fileupload_commons_fileupload_1_5.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_io_commons_io_2_11_0.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_openfeign_feign_core_12_4.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_openfeign_feign_slf4j_12_4.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_openfeign_form_feign_form_3_8_0.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_openfeign_form_feign_form_spring_3_8_0.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_openfeign_core_4_0_4.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_openfeign_4_0_4.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_kafka_spring_kafka_3_0_12.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_retry_spring_retry_2_0_4.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_messaging_6_0_13.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication-service/src/main/java/com/auth/authenticationservice/exception/CustomExceptionHandler.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication-service/src/main/java/com/auth/authenticationservice/exception/ErrorMessage.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/configuration/KafkaProducerConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/controller/ConsumerController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/dto/UserDto.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/exception/ServerConnectionException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/exception/UnAuthorizedException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/feignclient/AuthenticationClient.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/filter/JWTFilter.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/kafka/DataPublisherServiceImpl.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/kafka/kafkaConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/model/UserDetails.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/service/AuthService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/authentication-service/src/main/java/com/auth/authenticationservice/controller/AuthenticationController.java" beforeDir="false" afterPath="$PROJECT_DIR$/authentication-service/src/main/java/com/auth/authenticationservice/controller/AuthenticationController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/authentication-service/src/main/java/com/auth/authenticationservice/model/UserCredentials.java" beforeDir="false" afterPath="$PROJECT_DIR$/authentication-service/src/main/java/com/auth/authenticationservice/model/UserCredentials.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/authentication-service/src/main/java/com/auth/authenticationservice/service/UserServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/authentication-service/src/main/java/com/auth/authenticationservice/service/UserServiceImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/UserprofileApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/UserprofileApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/configuration/UserProfileConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/configuration/UserProfileConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/controller/UserProfileController.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/controller/UserProfileController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/dto/UserProfileDto.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/dto/UserProfileDto.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/exception/ErrorMessage.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/exception/ErrorMessage.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/exception/GlobalExceptionHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/exception/CustomExceptionHandler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/exception/ResourceAlreadyExistsException.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/exception/ResourceAlreadyExistsException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/exception/ResourceNotFoundException.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/exception/ResourceNotFoundException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/model/UserProfile.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/model/UserProfile.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/repository/UserProfileRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/repository/UserProfileRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/response/ResponseHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/response/ResponseHandler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/service/UserProfileService.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/service/UserProfileService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/service/UserProfileServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/userprofile-service/src/main/java/com/spotify/userprofile/service/UserProfileServiceImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/wishlist-service/src/main/java/com/spotify/wishlistservice/exception/ResourceNotFoundException.java" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist-service/src/main/java/com/spotify/wishlistservice/exception/ResourceNotFoundException.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="useMavenConfig" value="true" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="2YW1tpNzZ5mbqeZ4YN7RdjuGl8g" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "last_opened_file_path": "C:/Users/tejaj/Downloads/git/spotify/spotify-backend/authentication-service/src/main/java/com/auth/authenticationservice"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\tejaj\Downloads\git\spotify\spotify-backend\authentication-service\src\main\java\com\auth\authenticationservice" />
      <recent name="C:\Users\tejaj\Downloads\git\spotify\spotify-backend\userprofile-service\src\main\java\com\spotify\userprofile" />
      <recent name="C:\Users\tejaj\Downloads\git\spotify\spotify-backend\authentication-service\src\main\java\com\auth\authenticationservice\Configuration" />
      <recent name="C:\Users\tejaj\Downloads\git\spotify\spotify-backend\wishlist-service\src\main\java\com\spotify\wishlistservice\dto" />
      <recent name="C:\Users\tejaj\Downloads\git\spotify\spotify-backend\wishlist-service\src\main\java\com\spotify\wishlistservice\model" />
    </key>
  </component>
  <component name="RunManager" selected="Application.WishlistserviceApplication">
    <configuration name="AuthenticationServiceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.auth.authenticationservice.AuthenticationServiceApplication" />
      <module name="authentication-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.auth.authenticationservice.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ConfigServerApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.sshalem.configserver.ConfigServerApplication" />
      <module name="config-server" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.sshalem.configserver.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EurekaServerApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.university.eurekaserver.EurekaServerApplication" />
      <module name="eureka-server" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.university.eurekaserver.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserprofileApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.spotify.userprofile.UserprofileApplication" />
      <module name="userprofile-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.spotify.userprofile.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WishlistserviceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.spotify.wishlistservice.WishlistserviceApplication" />
      <module name="wishlist-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.spotify.wishlistservice.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.WishlistserviceApplication" />
        <item itemvalue="Application.UserprofileApplication" />
        <item itemvalue="Application.AuthenticationServiceApplication" />
        <item itemvalue="Application.ConfigServerApplication" />
        <item itemvalue="Application.EurekaServerApplication" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a2504401-f241-4a58-ab09-902bb2951c1e" name="Changes" comment="" />
      <created>1700626742368</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1700626742368</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>